apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
//    dataBinding {
//        enabled = true
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api 'com.android.volley:volley:1.1.1'
//    api 'com.squareup.okio:okio:1.6.0'
    api 'org.apache:apache:23'
    api 'com.google.code.gson:gson:2.8.6'
    api 'com.squareup.okhttp3:okhttp:4.6.0'
    api 'org.conscrypt:conscrypt-android:2.2.1'

//    implementation 'com.ejlchina:okhttps:2.4.2'
    implementation 'com.ejlchina:okhttps-gson:2.4.2'

    implementation "android.arch.lifecycle:extensions:1.1.0"
// alternatively, just ViewModel
    implementation "android.arch.lifecycle:viewmodel:1.1.0"
// alternatively, just LiveData
    implementation "android.arch.lifecycle:livedata:1.1.0"


//    api 'com.alibaba:fastjson:1.1.70.android'
//    api 'com.alibaba:fastjson:1.2.55'
}



//ext {
//    bintrayRepo = 'maven'
//    bintrayName = 'netlibrary'
//
//    publishedGroupId = 'com.example.netlibrary'
//    libraryName = 'netlibrary'
//    artifact = 'netlibrary'
//
//    libraryDescription = 'The gradient ui that View can change from one background to another background. (Such as the background of ImageView, the color of TextView)'
//
//    siteUrl = 'https://github.com/LIHAIYI/netlibrary'
//    gitUrl = 'https://github.com/LIHAIYI/netlibrary.git'
//
//    libraryVersion = '0.0.3'
//
//    developerId = 'lihaiyi'
//    developerName = 'lihaiyi'
//    developerEmail = 'lihaiyi8@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = "0.0.19"
def siteUrl = 'https://github.com/LIHAIYI/netlibrary'    // project homepage
def gitUrl  = 'https://github.com/LIHAIYI/netlibrary.git' // project git
group = "com.example.netlibrary"

//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//
//}
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    options.addStringOption('encoding', 'UTF-8')
//    options.addStringOption('charSet', 'UTF-8')
//
//}
////task javadocJar(type: Jar, dependsOn: javadoc) {
////    classifier = 'javadoc'
////    from javadoc.destinationDir
//////    options.addStringOption('encoding', 'UTF-8')
//////    options.addStringOption('charSet', 'UTF-8')
////
////}
//artifacts {
////    archives javadocJar
//    archives sourcesJar
//}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'netlibrary'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer { //填写的一些基本信息
                        id 'netlibrary'
                        name 'lihaiyi'
                        email 'lihaiyi8@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}



Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintrayUser")
    key = properties.getProperty("bintrayApiKey")
    configurations = ['archives']
    pkg {
        repo = "netlibrary"               //跟上面创建的Maven仓库名字保持一致
        name = "netlibrary"                //发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

